function [ V ] = getVelocity( X, V, P, D, G, params, diversity, t, n, d )
%     on = ones(1, d);    
%     if(diversity < t) % dgpsogs
%         V = params.IW * V - ...
%             params.GC * (rand(n, 1) * on) .* normGradient(D, n) - ...
%             params.SC2 * (rand(n, 1) * on) .* ( bsxfun(@minus, G.X, X) ./ (diversity + 1e-5));
%     else % apso
%         V = params.IW * V + ...
%             params.CC1 * (rand(n, 1) * on) .* (P - X) + ...
%             params.SC1 * (rand(n, 1) * on) .* bsxfun(@minus, G.X, X);
%     end

    if(diversity < t) % dgpsogs
        V = params.IW * V - ...
            params.GC * rand * normGradient(D, n) - ...
            params.SC2 * rand * ((G.X - X) ./ (diversity + 1e-5));
    else % apso
        V = params.IW * V + ...
            params.CC1 * rand * (P - X) + ...
            params.SC1 * rand * (G.X - X);
    end

end

